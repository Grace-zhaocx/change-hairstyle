version: '3.8'

services:
  # 前端服务
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:8000
      - REACT_APP_WS_URL=ws://localhost:8000
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - hairstyle-network

  # 后端API服务
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=sqlite+aiosqlite:///./data/hairstyle.db
      - REDIS_URL=redis://redis:6379
      - MINIO_ENDPOINT=minio:9000
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=minioadmin
      - MINIO_BUCKET_NAME=hairstyle
      - ENVIRONMENT=development
      - DEBUG=true
      - LOG_LEVEL=INFO
    depends_on:
      - redis
      - minio
    volumes:
      - ./backend:/app
      - ./models:/app/models
      - ./data:/app/data
      - ./logs:/app/logs
      - ./uploads:/app/uploads
    networks:
      - hairstyle-network
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]

  # Celery Worker (AI处理工作器)
  worker:
    build:
      context: ./backend
      dockerfile: Dockerfile
    command: celery -A app.worker worker --loglevel=info --concurrency=1
    environment:
      - DATABASE_URL=sqlite+aiosqlite:///./data/hairstyle.db
      - REDIS_URL=redis://redis:6379
      - MINIO_ENDPOINT=minio:9000
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=minioadmin
      - MINIO_BUCKET_NAME=hairstyle
      - ENVIRONMENT=development
      - DEBUG=true
      - LOG_LEVEL=INFO
    depends_on:
      - redis
      - minio
      - backend
    volumes:
      - ./backend:/app
      - ./models:/app/models
      - ./data:/app/data
      - ./logs:/app/logs
      - ./uploads:/app/uploads
    networks:
      - hairstyle-network
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]

  # Redis缓存和消息队列
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    networks:
      - hairstyle-network

  # MinIO对象存储
  minio:
    image: minio/minio:latest
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    networks:
      - hairstyle-network

  # Nginx反向代理
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
      - ./uploads:/var/www/uploads
    depends_on:
      - frontend
      - backend
    networks:
      - hairstyle-network

  # 数据库 (可选，开发环境使用SQLite)
  # postgres:
  #   image: postgres:14
  #   environment:
  #     - POSTGRES_DB=hairstyle_db
  #     - POSTGRES_USER=postgres
  #     - POSTGRES_PASSWORD=password
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #   ports:
  #     - "5432:5432"
  #   networks:
  #     - hairstyle-network

volumes:
  redis_data:
  minio_data:
  # postgres_data:

networks:
  hairstyle-network:
    driver: bridge